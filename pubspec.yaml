name: counter
description: A new Flutter project.

# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=2.18.0-246.0.dev <3.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter


  cupertino_icons: ^1.0.5
  get: ^4.6.5
  provider: ^6.0.3
  uuid: ^3.0.6
  http: ^0.13.4






  # sqflite
  sqflite: ^2.0.2+1
  sqflite_migration_service: ^2.0.0-nullsafety.1

  # state management
  stacked: ^2.3.12
  stacked_hooks: ^0.2.2

  # navigation
  stacked_services: ^0.8.26
  stacked_themes: ^0.3.8+1

  shared_preferences: ^2.0.15

  # inversion of control
  injectable: ^1.5.3
  flutter_hooks: ^0.18.5+1
  observable_ish: ^4.0.6
  expandable: ^5.0.1

  # Hive
  hive: ^2.2.2
  hive_flutter: ^1.1.0

  # data models
  freezed_annotation: ^2.0.3
  json_annotation: ^4.5.0
  flutter_dotenv: ^5.0.2
  retrofit: ^3.0.1+1
  dio: ^4.0.6
  pretty_dio_logger: ^1.1.1
  built_value: ^8.3.3

dev_dependencies:
  flutter_test:
    sdk: flutter

  build_runner: ^2.1.11
  flutter_gen_runner: ^4.3.0
  stacked_generator: ^0.6.6+1
  flutter_launcher_icons: ^0.9.3
  #  flutter_flavorizr: ^2.1.3
  hive_generator: ^1.1.3

  # data models
  freezed: ^2.0.3+1
  json_serializable: ^6.2.0
  retrofit_generator: ^4.0.1
  built_value_generator: ^8.3.3

flutter_gen:
  output: lib/gen_assets/
  lineLength: 80

  # Optional
  integrations:
    flutter_svg: true

  assets:
    enabled: true
    package_parameter_enabled: false
    # Assets.imagesChip
    # style: camel-case

    # Assets.images_chip
    # style: snake-case

    # Assets.images.chip (default style)
    # style: dot-delimiter



  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
